// Mocks generated by Mockito 5.4.5 from annotations
// in habari_pay_cs/test/unit/transaction_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:habari_pay_cs/data/data_providers/payment_data_provider.dart'
    as _i2;
import 'package:habari_pay_cs/data/repositories/payment_repository.dart' as _i4;
import 'package:habari_pay_cs/models/initiate_request.dart' as _i7;
import 'package:habari_pay_cs/models/initiate_response.dart' as _i6;
import 'package:habari_pay_cs/models/transaction_response.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tuple/tuple.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePaymentDataProvider_0 extends _i1.SmartFake
    implements _i2.PaymentDataProvider {
  _FakePaymentDataProvider_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTuple2_1<T1, T2> extends _i1.SmartFake
    implements _i3.Tuple2<T1, T2> {
  _FakeTuple2_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PaymentRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentRepository extends _i1.Mock implements _i4.PaymentRepository {
  MockPaymentRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PaymentDataProvider get dataProvider =>
      (super.noSuchMethod(
            Invocation.getter(#dataProvider),
            returnValue: _FakePaymentDataProvider_0(
              this,
              Invocation.getter(#dataProvider),
            ),
          )
          as _i2.PaymentDataProvider);

  @override
  _i5.Future<_i3.Tuple2<_i6.InitiateResponse?, Exception?>> initiateTransaction(
    _i7.InitiateRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#initiateTransaction, [request]),
            returnValue:
                _i5.Future<_i3.Tuple2<_i6.InitiateResponse?, Exception?>>.value(
                  _FakeTuple2_1<_i6.InitiateResponse?, Exception?>(
                    this,
                    Invocation.method(#initiateTransaction, [request]),
                  ),
                ),
          )
          as _i5.Future<_i3.Tuple2<_i6.InitiateResponse?, Exception?>>);

  @override
  _i5.Future<_i3.Tuple2<_i8.TransactionDetail?, Exception?>>
  fetchTransactionByRef(String? ref) =>
      (super.noSuchMethod(
            Invocation.method(#fetchTransactionByRef, [ref]),
            returnValue: _i5.Future<
              _i3.Tuple2<_i8.TransactionDetail?, Exception?>
            >.value(
              _FakeTuple2_1<_i8.TransactionDetail?, Exception?>(
                this,
                Invocation.method(#fetchTransactionByRef, [ref]),
              ),
            ),
          )
          as _i5.Future<_i3.Tuple2<_i8.TransactionDetail?, Exception?>>);

  @override
  _i5.Future<bool> addTransaction(_i8.TransactionDetail? trans) =>
      (super.noSuchMethod(
            Invocation.method(#addTransaction, [trans]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<List<_i8.TransactionDetail>> retrieveTransactions() =>
      (super.noSuchMethod(
            Invocation.method(#retrieveTransactions, []),
            returnValue: _i5.Future<List<_i8.TransactionDetail>>.value(
              <_i8.TransactionDetail>[],
            ),
          )
          as _i5.Future<List<_i8.TransactionDetail>>);
}
